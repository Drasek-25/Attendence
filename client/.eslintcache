[{"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\index.js":"1","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\App.js":"2","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\NavBar.js":"3","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\views\\Login.js":"4","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\views\\Classes.js":"5","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\ClassCard.js":"6","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\views\\IndividualClass.js":"7","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\ClassDate.js":"8","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\DateAttendance.js":"9","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\CohortForm.js":"10","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\ClassCardMenu.js":"11"},{"size":322,"mtime":1610147914458,"results":"12","hashOfConfig":"13"},{"size":682,"mtime":1610331008822,"results":"14","hashOfConfig":"13"},{"size":180,"mtime":1610151111291,"results":"15","hashOfConfig":"13"},{"size":1943,"mtime":1610497753978,"results":"16","hashOfConfig":"13"},{"size":2662,"mtime":1612555799303,"results":"17","hashOfConfig":"13"},{"size":1688,"mtime":1612555116507,"results":"18","hashOfConfig":"13"},{"size":3839,"mtime":1612333422652,"results":"19","hashOfConfig":"13"},{"size":3562,"mtime":1610775940649,"results":"20","hashOfConfig":"13"},{"size":1293,"mtime":1610506989521,"results":"21","hashOfConfig":"13"},{"size":1545,"mtime":1612555030142,"results":"22","hashOfConfig":"13"},{"size":555,"mtime":1612555171972,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"z6sdnc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\index.js",[],["51","52"],"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\App.js",["53"],"import \"./App.css\";\nimport { Switch, Route } from \"react-router\";\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./views/Login\";\nimport { useState } from \"react\";\nimport Classes from \"./views/Classes\";\nimport IndividualClass from \"./views/IndividualClass\";\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <NavBar />\n\n         <Switch>\n            <Route exact path=\"/\" render={() => <Login />} />\n            <Route path=\"/classes\" component={() => <Classes />} />\n            <Route path=\"/class/:classId\" component={IndividualClass} />\n            <Route render={() => <h1>404</h1>} />\n         </Switch>\n      </div>\n   );\n}\n\nexport default App;\n","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\NavBar.js",[],"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\views\\Login.js",[],"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\views\\Classes.js",["54"],"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\ClassCard.js",[],"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\views\\IndividualClass.js",["55","56","57"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ClassDate from \"../components/ClassDate\";\r\nimport plusIcon from \"../data/images/plus.svg\";\r\nimport saveIcon from \"../data/images/floppy-disk.svg\";\r\n\r\nconst IndividualClass = (props) => {\r\n   const [allClasses, setAllClasses] = useState();\r\n   const [indClass, setIndClass] = useState();\r\n\r\n   const handleAddClassDate = () => {\r\n      console.log(\"click!\");\r\n      const newClass = {\r\n         date: new Date().toISOString(),\r\n         students: [...indClass.enrolledStudents],\r\n      };\r\n      const updatedClass = { ...indClass };\r\n      updatedClass.dates.unshift(newClass);\r\n      console.log(updatedClass);\r\n      setIndClass(updatedClass);\r\n      setAllClasses({ ...allClasses, updatedClass });\r\n   };\r\n\r\n   const handleDeleteClassDate = (e, date) => {\r\n      e.stopPropagation();\r\n      // console.log(date);\r\n      const currentClass = { ...indClass };\r\n      const remainingDates = currentClass.dates.filter(\r\n         (classDate) => classDate.date !== date\r\n      );\r\n      currentClass.dates = remainingDates;\r\n      // console.log(currentClass);\r\n      setIndClass(currentClass);\r\n   };\r\n   const handleUpdateClassDate = (newDate, oldDate) => {\r\n      const currentClass = { ...indClass };\r\n      const classDates = currentClass.dates.map((date) => {\r\n         if (date.date === oldDate) {\r\n            date.date = newDate;\r\n         }\r\n         return date;\r\n      });\r\n      currentClass.dates = classDates;\r\n      setIndClass(currentClass);\r\n   };\r\n\r\n   useEffect(() => {\r\n      const getClasses = () => {\r\n         const classesRoute = \"http://localhost:8080/class\";\r\n         axios.get(classesRoute, { withCredentials: true }).then((res) => {\r\n            const classes = res.data.classes;\r\n            // console.log(\"allClasses: \", classes);\r\n            setAllClasses(classes);\r\n\r\n            const currentClass = classes.filter(\r\n               (clas) => clas._id === props.match.params.classId\r\n            )[0];\r\n\r\n            // console.log(\"indClass: \", currentClass);\r\n            setIndClass(currentClass);\r\n         });\r\n      };\r\n      getClasses();\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"view\">\r\n         {indClass && (\r\n            <div className=\"classes\">\r\n               <div className=\"classes__navbar\">\r\n                  <h2 className=\"classes__navbar-title\">{indClass.name}</h2>\r\n                  <div className=\"classes__navbar-button-row\">\r\n                     <button className=\"classes__navbar-save-button\">\r\n                        <img\r\n                           src={saveIcon}\r\n                           className=\"classes__navbar-button-icon\"\r\n                        />\r\n                     </button>\r\n                     <button\r\n                        className=\"classes__navbar-add-button\"\r\n                        onClick={handleAddClassDate}\r\n                     >\r\n                        <img\r\n                           src={plusIcon}\r\n                           className=\"classes__navbar-button-icon\"\r\n                        />\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"classes__card-container\">\r\n                  {indClass.dates.map((date) => {\r\n                     return (\r\n                        <ClassDate\r\n                           key={date.date}\r\n                           classDate={date}\r\n                           handleAddClassDate={handleAddClassDate}\r\n                           handleDeleteClassDate={handleDeleteClassDate}\r\n                           handleUpdateClassDate={handleUpdateClassDate}\r\n                        />\r\n                     );\r\n                  })}\r\n               </div>\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\nexport default IndividualClass;\r\n","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\ClassDate.js",["58","59","60"],"import { useState } from \"react\";\r\nimport DateAttendance from \"./DateAttendance\";\r\nimport trashIcon from \"../data/images/recycle-bin.svg\";\r\nimport minusIcon from \"../data/images/math-minus.svg\";\r\nimport plusIcon from \"../data/images/plus.svg\";\r\nimport ellipsisIcon from \"../data/images/ellipsis-h.svg\";\r\n\r\nconst ClassDate = ({\r\n   classDate,\r\n   handleDeleteClassDate,\r\n   handleUpdateClassDate,\r\n}) => {\r\n   const [active, setActive] = useState(false);\r\n   const [transition, setTransition] = useState(false);\r\n   const [editMode, setEditMode] = useState(false);\r\n\r\n   const handleOpenStudentsMenu = () => {\r\n      setActive(!active);\r\n      setTimeout(() => setTransition(!transition), 1);\r\n   };\r\n   const dateConvertToString = (isoString) => {\r\n      console.log(isoString);\r\n      console.log(new Date(isoString).toDateString());\r\n      return new Date(isoString).toDateString();\r\n   };\r\n\r\n   const handleEditMode = () => {\r\n      setEditMode(!editMode);\r\n   };\r\n   const handleDateInput = (e) => {\r\n      const updatedDate = new Date(e.target.value).toISOString();\r\n      handleUpdateClassDate(updatedDate, classDate.date);\r\n   };\r\n   const handleKeyDown = (e) => {\r\n      if (e.keyCode === 13) {\r\n         handleDateInput(e);\r\n         handleEditMode();\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div\r\n            className={\r\n               \"class-date \" +\r\n               (active ? \"class-date--active\" : \"class-date--inactive\")\r\n            }\r\n            key={classDate._id}\r\n         >\r\n            {editMode ? (\r\n               <input\r\n                  className=\"class-date__date-input\"\r\n                  type=\"date\"\r\n                  onBlur={(e) => handleDateInput(e)}\r\n                  onKeyDown={handleKeyDown}\r\n               ></input>\r\n            ) : (\r\n               <span className=\"class-date__text\">\r\n                  {dateConvertToString(classDate.date)}\r\n               </span>\r\n            )}\r\n            <div className=\"class-date__button-container\">\r\n               <button\r\n                  className={\r\n                     \"class-date__open-button \" +\r\n                     (active && \"class-date__open-button--active\")\r\n                  }\r\n                  onClick={handleOpenStudentsMenu}\r\n               >\r\n                  <img\r\n                     src={active ? minusIcon : plusIcon}\r\n                     className=\"class-date__button-icon\"\r\n                  />\r\n               </button>\r\n               <button\r\n                  className=\"class-date__edit-button\"\r\n                  onClick={handleEditMode}\r\n               >\r\n                  <img src={ellipsisIcon} className=\"class-date__button-icon\" />\r\n               </button>\r\n               <button\r\n                  className=\"class-date__delete-button\"\r\n                  onClick={(e) => handleDeleteClassDate(e, classDate.date)}\r\n               >\r\n                  <img src={trashIcon} className=\"class-date__delete-icon\" />\r\n               </button>\r\n            </div>\r\n         </div>\r\n         {active && (\r\n            <div\r\n               className={\r\n                  \"date-attendance \" + (transition && \"date-attendance--active\")\r\n               }\r\n            >\r\n               {classDate.students.map((student) => {\r\n                  return (\r\n                     <DateAttendance\r\n                        student={student}\r\n                        transition={transition}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\nexport default ClassDate;\r\n","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\DateAttendance.js",["61","62"],"import { useState } from \"react\";\r\nimport greenCheck from \"../data/images/green-checkmark-line.svg\";\r\nimport redXCheck from \"../data/images/red-x-line.svg\";\r\n\r\nconst DateAttendance = ({ student, transition }) => {\r\n   const [inAttendance, setInAttendance] = useState(true);\r\n   const handleClick = () => {\r\n      setInAttendance(!inAttendance);\r\n   };\r\n\r\n   return (\r\n      <div\r\n         className={\r\n            \"date-attendance__row \" +\r\n            (transition && \"date-attendance__row--active\")\r\n         }\r\n      >\r\n         <img\r\n            src={greenCheck}\r\n            className={\r\n               \"date-attendance__button \" +\r\n               (inAttendance\r\n                  ? \"date-attendance__button--active\"\r\n                  : \"date-attendance__button--inactive\")\r\n            }\r\n            onClick={handleClick}\r\n         />\r\n         <img\r\n            src={redXCheck}\r\n            className={\r\n               \"date-attendance__button \" +\r\n               (!inAttendance\r\n                  ? \"date-attendance__button--active\"\r\n                  : \"date-attendance__button--inactive\")\r\n            }\r\n            onClick={handleClick}\r\n         />\r\n         <span className=\"date-attendance__text\">{student.name}</span>\r\n      </div>\r\n   );\r\n};\r\nexport default DateAttendance;\r\n","D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\CohortForm.js",["63"],"D:\\Documents\\Projects\\Repos\\NODE-Attendance-Backend\\client\\src\\components\\ClassCardMenu.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":56,"column":19,"nodeType":"74","endLine":56,"endColumn":81},{"ruleId":"75","severity":1,"message":"76","line":64,"column":7,"nodeType":"77","endLine":64,"endColumn":9,"suggestions":"78"},{"ruleId":"72","severity":1,"message":"73","line":74,"column":25,"nodeType":"74","endLine":77,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":83,"column":25,"nodeType":"74","endLine":86,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":70,"column":19,"nodeType":"74","endLine":73,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":79,"column":19,"nodeType":"74","endLine":79,"endColumn":81},{"ruleId":"72","severity":1,"message":"73","line":85,"column":19,"nodeType":"74","endLine":85,"endColumn":78},{"ruleId":"72","severity":1,"message":"73","line":18,"column":10,"nodeType":"74","endLine":27,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":28,"column":10,"nodeType":"74","endLine":37,"endColumn":12},{"ruleId":"68","severity":1,"message":"79","line":1,"column":20,"nodeType":"70","messageId":"71","endLine":1,"endColumn":29},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.classId'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [props.match.params.classId]",{"range":"85","text":"86"},[2167,2169],"[props.match.params.classId]"]